package endtoendteset;

import basesteps.BaseSteps;
import org.testng.Assert;
import org.testng.annotations.Test;
import pages.*;

public class TestPurchaseFeature extends BaseSteps {
    @Test
    public void testSignup() throws InterruptedException {
        SignUpPage signUpPage = homepage.clickOnSignUp();
        signUpPage.enterSignupUsername();
        signUpPage.enterSignupPassword();
        signUpPage.clickOnSignupButton();
        String actualResult = signUpPage.getSignupAlertText();
        String expectedResult = "Sign up successful.";
        Assert.assertTrue(actualResult.contains(expectedResult));
        signUpPage.acceptAlert();
        Thread.sleep(1000);
        LogInPage logInPage = homepage.clickOnLogIn();
        Thread.sleep(1000);
        logInPage.enterLoginUsername("MostafaGhobashy");
        logInPage.enterLoginPassword("Ghobash11");
        logInPage.clickOnLoginButton();
        Thread.sleep(2000);
        String secondActualResult = logInPage.getLoginUserText();
        String secondExpectedResult = "Welcome MostafaGhobashy";
        Assert.assertTrue(secondActualResult.contains(secondExpectedResult));
        Thread.sleep(1000);
        LapTopPage lapTopPage = homepage.clickOnLaptops();
        Thread.sleep(1000);
        FirstProductPage firstProductPage = lapTopPage.clickOnFirstProduct();
        Thread.sleep(1000);
        firstProductPage.addFirstProductToCart();
        Thread.sleep(1000);
        String thirdActualResult = firstProductPage.getFirstProductAlertText();
        String thirdExpectedResult = "Product added";
        Assert.assertTrue(thirdActualResult.contains(thirdExpectedResult));
        Thread.sleep(1000);
        firstProductPage.acceptFirstProductAlert();
        Thread.sleep(1000);
        CartPage cartPage = firstProductPage.clickOnCart();
        Thread.sleep(2000);
        String actualResultFirstProductName = cartPage.getFirstProductName();
        String expectedResultFirstProductName = "Sony vaio i5";
        Assert.assertTrue(actualResultFirstProductName.contains(expectedResultFirstProductName));
        Thread.sleep(1000);
        String actualResultFirstProductPrice = cartPage.getFirstProductPrice();
        String expectedResultFirstProductPrice = "790";
        Assert.assertTrue(actualResultFirstProductPrice.contains(expectedResultFirstProductPrice));
        Thread.sleep(1000);
        cartPage.clickOnHome();
        Thread.sleep(1000);
        homepage.clickOnLaptops();
        Thread.sleep(1000);
        SecondProductPage secondProductPage = lapTopPage.clickOnSecondProduct();
        Thread.sleep(1000);
        secondProductPage.addSecondProductToCart();
        Thread.sleep(1000);
        String fourthActualResult = secondProductPage.getSecondProductAlertText();
        String fourthExpectedResult = "Product added";
        Assert.assertTrue(fourthActualResult.contains(fourthExpectedResult));
        Thread.sleep(1000);
        secondProductPage.acceptSecondProductAlert();
        Thread.sleep(1000);
        secondProductPage.clickOnCartFromSecondProduct();
        Thread.sleep(2000);
        String actualResultSecondProductName = cartPage.getSecondProductName();
        String expectedResultSecondProductName = "Sony vaio i7";
        Assert.assertTrue(actualResultSecondProductName.contains(expectedResultSecondProductName));
        Thread.sleep(1000);
        String actualResultSecondProductPrice = cartPage.getSecondProductPrice();
        String expectedResultSecondProductPrice = "790";
        Assert.assertTrue(actualResultSecondProductPrice.contains(expectedResultSecondProductPrice));
        String actualResultTotalPrice = cartPage.getTotalPrice();
        String expectedResultTotalPrice = "1580";
        Assert.assertTrue(actualResultTotalPrice.contains(expectedResultTotalPrice));
        Thread.sleep(1000);
        PlaceOrderPage placeOrderPage = cartPage.clickOnPlaceOrder();
        Thread.sleep(1000);
        placeOrderPage.enterName("Mostafa Ghobashy");
        placeOrderPage.enterCountry("Egypt");
        placeOrderPage.enterCity("Cairo");
        placeOrderPage.enterCreditCard("41115986322520");
        placeOrderPage.enterMonth("12");
        placeOrderPage.enterYear("2024");
        placeOrderPage.clickOnPurchaseButton();
        Thread.sleep(1000);
        String actualResultPurchaseMessage = placeOrderPage.successPurchaseText();
        String expectedResultPurchaseMessage = "Thank you for your purchase!";
        Assert.assertTrue(actualResultPurchaseMessage.contains(expectedResultPurchaseMessage));
    }
}